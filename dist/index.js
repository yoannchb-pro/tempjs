!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).tempjs=t()}(this,(function(){"use strict";const e=[{name:"return",description:"Allow user to add variable to the output",delimiter:"=",fn:function(e){return"$__output += "+e}},{name:"comment",description:"Shortcut to turn some code into a comment",delimiter:"#",fn:function(e){return"/*"+e+"*/"}},{name:"cancel",description:"Output the instruction as text with delimiters",delimiter:"%",fn:function(e,t){return`$__ouput += ${t.openDelimiter}${e}${t.closeDelimiter}`}}],t={openDelimiter:"{%",closeDelimiter:"%}",minimified:!0},n="undefined"==typeof window,i=n&&require("fs"),o=n&&require("path");let r="";function l(e,t={},l){if(!n)throw new Error("Including file is only available in nodejs environement");const u=i.readFileSync(o.resolve(r,e),"utf-8");return r||(r=o.dirname(e)),c(u,t,l)}const u=[{name:"include",description:"Allow to render other file into the template",fn:l}],s=async function(){}.constructor;function c(n,i={},o){return function(n,i={},o){var r,l,c;(o=Object.assign(t,o)).delimiters=(null!==(r=o.delimiters)&&void 0!==r?r:[]).concat(e),o.plugins=(null!==(l=o.plugins)&&void 0!==l?l:[]).concat(u);const m=["let $__output=''"],d=new RegExp(`(${o.openDelimiter}[\\s\\S]*?${o.closeDelimiter})`,"gi");for(const e of n.split(d)){if(!d.test(e)){m.push(`$__output += ${JSON.stringify(e)}`);continue}let t=e.substring(o.openDelimiter.length,e.length-o.closeDelimiter.length);const n=o.delimiters.find((e=>t.startsWith(e.delimiter)));n&&(t=n.fn(t.replace(n.delimiter,""),o)),m.push(t)}m.push("return $__output");const f=m.join(o.minimified?";":";\n");return(o.async?s:Function)(...Object.keys(i),...o.plugins.map((e=>e.name)),f).bind(null!==(c=o.context)&&void 0!==c?c:null,...Object.values(i),...o.plugins.map((e=>e.fn)))}(n,i,o)()}return{compile:c,compileFromFile:l}}));
//# sourceMappingURL=index.js.map
