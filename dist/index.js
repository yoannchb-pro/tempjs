!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).tempjs=e()}(this,(function(){"use strict";const t=[{name:"return",description:"Allow user to add variable to the output",delimiter:"=",fn:function(t){return"$__output += "+t}},{name:"comment",description:"Shortcut to turn some code into a comment",delimiter:"#",fn:function(t){return"/*"+t+"*/"}},{name:"cancel",description:"Output the instruction as text with delimiters",delimiter:"%",fn:function(t,e){return`$__output += "${e.openDelimiter}${t}${e.closeDelimiter}"`}}],e={openDelimiter:"{%",closeDelimiter:"%}",minimified:!0},n="undefined"==typeof window,i=n&&require("fs"),o=n&&require("path");let u="";function s(t,e={},s={}){if(!n)throw new Error("Including file is only available in nodejs environement");const r=i.readFileSync(o.resolve(u,t),"utf-8");return u||(u=o.dirname(t)),d(r,e,s)}const r=[{name:"include",description:"Allow to render other file into the template",fn:s}],l=async function(){}.constructor;function c(n,i={},o={}){var u,s,c,d,a,m,p;(o=Object.assign(e,o)).delimiters=(null!==(u=o.delimiters)&&void 0!==u?u:[]).concat(t),o.plugins=(null!==(s=o.plugins)&&void 0!==s?s:[]).concat(r);const f=["let $__output=''"],g=new RegExp(`(\\n?[\\s\\t]*${o.openDelimiter}_?[\\s\\S]*?_?${o.closeDelimiter}[\\s\\t]*\\n?)`,"gi");for(const t of n.split(g)){if(!g.test(t)){f.push(`$__output += ${JSON.stringify(t)}`);continue}const e=null===(c=t.match(/^\n?[\s\t]*/g))||void 0===c?void 0:c[0],n=null===(d=t.match(/[\s\t]*\n?$/g))||void 0===d?void 0:d[0];let i=t.substring(o.openDelimiter.length+(null!==(a=e.length)&&void 0!==a?a:0),t.length-(o.closeDelimiter.length+(null!==(m=n.length)&&void 0!==m?m:0)));const u=i.startsWith("_"),s=i.endsWith("_");u?i=i.substring(1):f.push(`$__output += ${JSON.stringify(e)}`),s&&(i=i.substring(0,i.length-1));const r=o.delimiters.find((t=>i.startsWith(t.delimiter)));r&&(i=r.fn(i.substring(1),o)),f.push(i),s||f.push(`$__output += ${JSON.stringify(n)}`)}f.push("return $__output");const h=f.join(o.minimified?";":";\n"),_=o.async?l:Function,$=Object.keys(i),v=Object.values(i),b=o.plugins.map((t=>t.name)),y=o.plugins.map((t=>t.fn));return{template:n,data:i,options:o,generatedFunction:_(...$,...b,h).bind(null!==(p=o.context)&&void 0!==p?p:null,...v,...y),generatedCode:h,dataListName:$,dataListValue:v,pluginsName:b,pluginsFunctions:y}}function d(t,e={},n={}){return c(t,e,n).generatedFunction()}return{compile:d,compileFromFile:s,createFunction:function(t,e={},n={}){return c(t,e,n).generatedFunction},debug:c}}));
//# sourceMappingURL=index.js.map
