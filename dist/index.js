!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).tempjs=t()}(this,(function(){"use strict";const e={openDelimiter:"{{",closeDelimiter:"}}"},t=[{name:"return",description:"Allow user to add variable to the output",delimiter:"=",fn:function(e){return"$__output += "+e}},{name:"comment",description:"Shortcut to turn some code into a comment",delimiter:"#",fn:function(e){return"/*"+e+"*/"}}],n="undefined"==typeof window,i=n?require("fs"):{},o=n?require("path"):{};let l="";function u(e,t={},n={}){const u=i.readFileSync(o.resolve(l,e),"utf-8");return l||(l=o.dirname(e)),s(u,t,n)}const r=[{name:"include",description:"Allow to render other file into the template",fn:u}];function s(n,i={},o={}){var l,u,s;(o=Object.assign(e,o)).delimiters=(null!==(l=o.delimiters)&&void 0!==l?l:[]).concat(t),o.plugins=(null!==(u=o.plugins)&&void 0!==u?u:[]).concat(r);const p=new RegExp(o.openDelimiter+"([\\s\\S]*?)"+o.closeDelimiter,"gi"),c=["let $__output=''"],d=n.split(new RegExp(o.openDelimiter+"[\\s\\S]*?"+o.closeDelimiter,"gi"));let f;for(;null!==(f=p.exec(n));){const e=f[1],t=d.shift(),i=JSON.stringify(t);let l=e;const u=o.delimiters.find((t=>e.startsWith(t.delimiter)));u&&(l=u.fn(e.replace(u.delimiter,""))),i&&n.indexOf(t)<n.indexOf(e)?(c.push(`$__output += ${i}`),c.push(l)):i?(c.push(l),c.push(`$__output += ${i}`)):c.push(l)}return d.length>0&&c.push(`$__output += ${JSON.stringify(d.shift())}`),c.push("return $__output"),new Function(...Object.keys(i),...o.plugins.map((e=>e.name)),c.join(";")).apply(null!==(s=o.context)&&void 0!==s?s:null,[...Object.values(i),...o.plugins.map((e=>e.fn))])}return{compile:s,compileFromFile:u}}));
//# sourceMappingURL=index.js.map
