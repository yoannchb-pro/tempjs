{"version":3,"file":"index.js","sources":["../src/config/defaultOptions.ts","../src/config/defaultDelimiters.ts","../src/core/compileFromFile.ts","../src/config/defaultPlugins.ts","../src/core/compile.ts","../src/index.ts"],"sourcesContent":["import Options from \"../../types/options\";\r\n\r\nconst defaultOptions: Options = {\r\n  openDelimiter: \"{{\",\r\n  closeDelimiter: \"}}\",\r\n};\r\n\r\nexport default defaultOptions;\r\n","import Options from \"../../types/options\";\r\n\r\nconst defaultDelimiters: Options[\"delimiters\"] = [\r\n  {\r\n    name: \"return\",\r\n    delimiter: \"=\",\r\n    fn: function (content) {\r\n      return \"return \" + content;\r\n    },\r\n  },\r\n  {\r\n    name: \"comment\",\r\n    delimiter: \"#\",\r\n    fn: function (content) {\r\n      return \"/*\" + content + \"*/\";\r\n    },\r\n  },\r\n];\r\n\r\nexport default defaultDelimiters;\r\n","import Options from \"../../types/options\";\r\nimport compile from \"./compile\";\r\n\r\nconst isNode = typeof window === \"undefined\";\r\nconst fs = isNode ? require(\"fs\") : {};\r\nconst path = isNode ? require(\"path\") : {};\r\n\r\nlet defaultDirPath: string = \"\";\r\n\r\n/**\r\n * Compile from a file content\r\n * @param file file path\r\n * @param data data used in the file\r\n * @param opts compile options\r\n * @returns\r\n */\r\nfunction compileFromFile(\r\n  file: string,\r\n  data: Record<string, unknown> = {},\r\n  opts: Options = {}\r\n) {\r\n  const template = fs.readFileSync(path.resolve(defaultDirPath, file), \"utf-8\");\r\n\r\n  if (!defaultDirPath) defaultDirPath = path.dirname(file);\r\n\r\n  return compile(template, data, opts);\r\n}\r\n\r\nexport default compileFromFile;\r\n","import Options from \"../../types/options\";\r\nimport compileFromFile from \"../core/compileFromFile\";\r\n\r\nconst defaultPlugins: Options[\"plugins\"] = [\r\n  {\r\n    name: \"include\",\r\n    fn: compileFromFile,\r\n  },\r\n];\r\n\r\nexport default defaultPlugins;\r\n","import defaultOptions from \"../config/defaultOptions\";\r\nimport defaultDelimiters from \"../config/defaultDelimiters\";\r\nimport defaultPlugins from \"../config/defaultPlugins\";\r\nimport Options from \"../../types/options\";\r\n\r\n/**\r\n * Compile a tempjs template\r\n * @param template the template\r\n * @param data data you need in the template\r\n * @param opts compile options\r\n * @returns\r\n */\r\nfunction compile(\r\n  template: string,\r\n  data: Record<string, unknown> = {},\r\n  opts: Options = {}\r\n): string {\r\n  opts = Object.assign(defaultOptions, opts);\r\n\r\n  opts.delimiters = (opts.delimiters ?? []).concat(defaultDelimiters);\r\n  opts.plugins = (opts.plugins ?? []).concat(defaultPlugins);\r\n\r\n  const delimiterRegex = new RegExp(\r\n    opts.openDelimiter + \"([\\\\s\\\\S]*?)\" + opts.closeDelimiter,\r\n    \"gi\"\r\n  );\r\n\r\n  const result: string[] = [];\r\n\r\n  const templateText = template.split(\r\n    new RegExp(opts.openDelimiter + \"[\\\\s\\\\S]*?\" + opts.closeDelimiter, \"gi\")\r\n  );\r\n\r\n  let match: RegExpExecArray;\r\n  while ((match = delimiterRegex.exec(template)) !== null) {\r\n    const jsInstruction = match[1];\r\n    const text = JSON.stringify(templateText.shift());\r\n\r\n    let finalJsInstruction = jsInstruction;\r\n\r\n    const customDelimiter = opts.delimiters.find((delimiter) =>\r\n      jsInstruction.startsWith(delimiter.delimiter)\r\n    );\r\n\r\n    if (customDelimiter) {\r\n      finalJsInstruction = customDelimiter.fn(\r\n        jsInstruction.replace(customDelimiter.delimiter, \"\")\r\n      );\r\n    }\r\n\r\n    result.push(\r\n      (text ? text + \"+\" : \"\") + `((function(){ ${finalJsInstruction} })()??\"\")`\r\n    );\r\n  }\r\n\r\n  const code =\r\n    \"return \" +\r\n    result.join(\" + \") +\r\n    (templateText.length > 0 ? \"+\" + JSON.stringify(templateText.shift()) : \"\");\r\n  return new Function(\r\n    ...Object.keys(data),\r\n    ...opts.plugins.map((plugin) => plugin.name),\r\n    code\r\n  ).apply(opts.context ?? null, [\r\n    ...Object.values(data),\r\n    ...opts.plugins.map((plugin) => plugin.fn),\r\n  ]);\r\n}\r\n\r\nexport default compile;\r\n","import compile from \"./core/compile\";\r\nimport compileFromFile from \"./core/compileFromFile\";\r\n\r\nexport default {\r\n  compile,\r\n  compileFromFile,\r\n};\r\n"],"names":["defaultOptions","openDelimiter","closeDelimiter","defaultDelimiters","name","delimiter","fn","content","isNode","window","fs","require","path","defaultDirPath","compileFromFile","file","data","opts","template","readFileSync","resolve","dirname","compile","defaultPlugins","Object","assign","delimiters","_a","concat","plugins","_b","delimiterRegex","RegExp","result","templateText","split","match","exec","jsInstruction","text","JSON","stringify","shift","finalJsInstruction","customDelimiter","find","startsWith","replace","push","code","join","length","Function","keys","map","plugin","apply","_c","context","values"],"mappings":"uOAEA,MAAMA,EAA0B,CAC9BC,cAAe,KACfC,eAAgB,MCFZC,EAA2C,CAC/C,CACEC,KAAM,SACNC,UAAW,IACXC,GAAI,SAAUC,GACZ,MAAO,UAAYA,CACpB,GAEH,CACEH,KAAM,UACNC,UAAW,IACXC,GAAI,SAAUC,GACZ,MAAO,KAAOA,EAAU,IACzB,ICZCC,EAA2B,oBAAXC,OAChBC,EAAKF,EAASG,QAAQ,MAAQ,CAAA,EAC9BC,EAAOJ,EAASG,QAAQ,QAAU,CAAA,EAExC,IAAIE,EAAyB,GAS7B,SAASC,EACPC,EACAC,EAAgC,CAAA,EAChCC,EAAgB,CAAA,GAEhB,MAAMC,EAAWR,EAAGS,aAAaP,EAAKQ,QAAQP,EAAgBE,GAAO,SAIrE,OAFKF,IAAgBA,EAAiBD,EAAKS,QAAQN,IAE5CO,EAAQJ,EAAUF,EAAMC,EACjC,CCvBA,MAAMM,EAAqC,CACzC,CACEnB,KAAM,UACNE,GAAIQ,ICMR,SAASQ,EACPJ,EACAF,EAAgC,CAAA,EAChCC,EAAgB,CAAA,cAEhBA,EAAOO,OAAOC,OAAOzB,EAAgBiB,IAEhCS,YAAiC,QAAnBC,EAAAV,EAAKS,kBAAc,IAAAC,EAAAA,EAAA,IAAIC,OAAOzB,GACjDc,EAAKY,SAA2B,QAAhBC,EAAAb,EAAKY,eAAW,IAAAC,EAAAA,EAAA,IAAIF,OAAOL,GAE3C,MAAMQ,EAAiB,IAAIC,OACzBf,EAAKhB,cAAgB,eAAiBgB,EAAKf,eAC3C,MAGI+B,EAAmB,GAEnBC,EAAehB,EAASiB,MAC5B,IAAIH,OAAOf,EAAKhB,cAAgB,aAAegB,EAAKf,eAAgB,OAGtE,IAAIkC,EACJ,KAAmD,QAA3CA,EAAQL,EAAeM,KAAKnB,KAAqB,CACvD,MAAMoB,EAAgBF,EAAM,GACtBG,EAAOC,KAAKC,UAAUP,EAAaQ,SAEzC,IAAIC,EAAqBL,EAEzB,MAAMM,EAAkB3B,EAAKS,WAAWmB,MAAMxC,GAC5CiC,EAAcQ,WAAWzC,EAAUA,aAGjCuC,IACFD,EAAqBC,EAAgBtC,GACnCgC,EAAcS,QAAQH,EAAgBvC,UAAW,MAIrD4B,EAAOe,MACJT,EAAOA,EAAO,IAAM,IAAM,iBAAiBI,cAE/C,CAED,MAAMM,EACJ,UACAhB,EAAOiB,KAAK,QACXhB,EAAaiB,OAAS,EAAI,IAAMX,KAAKC,UAAUP,EAAaQ,SAAW,IAC1E,OAAO,IAAIU,YACN5B,OAAO6B,KAAKrC,MACZC,EAAKY,QAAQyB,KAAKC,GAAWA,EAAOnD,OACvC6C,GACAO,MAAkB,QAAZC,EAAAxC,EAAKyC,eAAO,IAAAD,EAAAA,EAAI,KAAM,IACzBjC,OAAOmC,OAAO3C,MACdC,EAAKY,QAAQyB,KAAKC,GAAWA,EAAOjD,MAE3C,OChEe,CACbgB,UACAR"}